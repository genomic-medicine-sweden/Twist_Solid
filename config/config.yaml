resources: "config/resources.yaml"
samples: "samples.tsv"
units: "units.tsv"

#hydra_local_path: "PATH_TO_REPO"

output: "config/output_files.yaml"
default_container: "docker://hydragenetics/common:3.1.1"
general_report: "config/reports/general_report.yaml"

trimmer_software: "fastp_pe"

arriba:
  container: "docker://hydragenetics/arriba:2.3.0"

arriba_draw_fusion:
  container: "docker://hydragenetics/arriba:2.3.0"

add_multi_snv_in_codon:
  af_limit: 0.00
  artifact_limit: 10000

bcbio_variation_recall_ensemble:
  container: "docker://hydragenetics/bcbio-vc:0.2.6"
  callers:
    - vardict
    - gatk_mutect2

bcftools_annotate:
  output_type: "z"
  annotation_string: "-m DB"

bwa_mem:
  container: "docker://hydragenetics/bwa_mem:0.7.17"

bwa_mem_merge:
  extra: "-c -p"

bwa_mem_realign_consensus_reads:
  container: "docker://hydragenetics/fgbio:2.1.0"

call_small_cnv_deletions:
  window_size: 4
  region_max_size: 30
  min_nr_stdev_diff: 2.5
  min_log_odds_diff: 0.3

call_small_cnv_amplifications:
  window_size: 3
  region_max_size: 15
  min_nr_stdev_diff: 8
  min_log_odds_diff: 0.4

cnvkit_batch:
  container: "docker://hydragenetics/cnvkit:0.9.9"
  extra: "--drop-low-coverage"
  method: "hybrid"

cnvkit_batch_hrd:
  container: "docker://hydragenetics/cnvkit:0.9.9"
  method: "hybrid"

cnvkit_call:
  container: "docker://hydragenetics/cnvkit:0.9.9"

cnvkit_diagram:
  container: "docker://hydragenetics/cnvkit:0.9.9"

cnvkit_export_seg:
  container: "docker://hydragenetics/cnvkit:0.9.9"

cnvkit_scatter:
  container: "docker://hydragenetics/cnvkit:0.9.9"

cnv_html_report:
  show_table: true
  cytobands: true
  extra_tables:
    - name: Small CNVs and 1p19q
      description: >
        Additional small amplifications and deletions as well as 1p19q co-deletions called by Twist Solid
        in-house scripts. Can have overlaps with called regions from other callers.
      path: "cnv_sv/svdb_query/{sample}_{type}.{tc_method}.cnv_loh_genes_all.cnv_additional_variants_only.tsv"
    - name: Large chromosomal aberrations
      description: >
        Large chromosomal aberrations in the form of deletions, duplications and copy neutral loss of heterozygosity.
        Also warnings of baseline skewness and detection of polyploidy in the sample.
      path: "cnv_sv/svdb_query/{sample}_{type}.{tc_method}.cnv_loh_genes_all.cnv_chromosome_arms.tsv"

cnv_tsv_report:
  amp_cn_limit: 6.0
  baseline_fraction_limit: 0.2
  del_1p19q_cn_limit: 1.4
  del_1p19q_chr_arm_fraction: 0.3
  chr_arm_fraction: 0.3
  del_chr_arm_cn_limit: 1.4
  amp_chr_arm_cn_limit: 2.6
  normal_baf_lower_limit: 0.3
  normal_baf_upper_limit: 0.7
  normal_cn_lower_limit: 1.7
  normal_cn_upper_limit: 2.25
  polyploidy_fraction_limit: 0.2
  max_cnv_fp_size: 15000000

fastp_pe:
  container: "docker://hydragenetics/fastp:0.20.1"
  # Default enabled trimming parameters for fastp. Specified for clarity.
  extra: "--trim_poly_g --qualified_quality_phred 15 --unqualified_percent_limit 40 --n_base_limit 5 --length_required 15"

fastp_pe_arriba:
  container: "docker://hydragenetics/fastp:0.20.1"
  extra: "--max_len1 100"

fastqc:
  container: "docker://hydragenetics/fastqc:0.11.9"

fgbio_call_and_filter_consensus_reads:
  container: "docker://hydragenetics/fgbio:2.1.0"
  max_base_error_rate: "0.2"
  min_reads_call: "1 0 0"
  min_reads_filter: "1 0 0"
  min_input_base_quality_call: 20
  min_input_base_quality_filter: 30

fgbio_copy_umi_from_read_name:
  container: "docker://hydragenetics/fgbio:2.1.0"

fgbio_group_reads_by_umi:
  container: "docker://hydragenetics/fgbio:2.1.0"
  umi_strategy: paired

filter_vcf:
  snv_soft_filter: "config/filters/config_soft_filter.yaml"
  snv_soft_filter_umi: "config/filters/config_soft_filter_umi.yaml"
  snv_hard_filter: "config/filters/config_hard_filter.yaml"
  snv_hard_filter_umi: "config/filters/config_hard_filter_umi.yaml"
  snv_hard_filter_purecn: "config/filters/config_hard_filter_purecn.yaml"
  cnv_hard_filter_amp: "config/filters/config_hard_filter_cnv_amp.yaml"
  cnv_hard_filter_loh: "config/filters/config_hard_filter_cnv_loh.yaml"
  germline: "config/filters/config_hard_filter_germline.yaml"

filter_fuseq_wes:
  min_support: 50
  filter_on_fusiondb: True

filter_fuseq_wes_umi:
  min_support: 15
  filter_on_fusiondb: True

fuseq_wes:
  container: "docker://hydragenetics/fuseq_wes:1.0.1"

fusioncatcher:
  container: "docker://hydragenetics/fusioncatcher:1.33"
  extra: ""

gatk_calculate_contamination:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gatk_call_copy_ratio_segments:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gatk_collect_allelic_counts:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gatk_collect_read_counts:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gatk_denoise_read_counts:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gatk_model_segments:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gatk_get_pileup_summaries:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gatk_mutect2:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gatk_mutect2_filter:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gatk_mutect2_gvcf:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gatk_mutect2_merge_stats:
  container: "docker://hydragenetics/gatk4:4.1.9.0"

gene_fuse:
  container: "docker://hydragenetics/genefuse:0.6.1"

general_html_report:
  final_directory_depth: 4
  multiqc_config: "config/reports/multiqc_config_dna.yaml"

juli_annotate:
  container: "docker://hydragenetics/juli:0.1.6.2"

juli_call:
  container: "docker://hydragenetics/juli:0.1.6.2"

jumble_cnvkit_call:
  container: "docker://hydragenetics/cnvkit:0.9.9"

jumble_run:
  container: "docker://hydragenetics/jumble:240530"

jumble_vcf:
  dup_limit: 2.5
  het_del_limit: 1.5
  hom_del_limit: 0.5

hotspot_report:
  report_config: "config/reports/hotspot_report.yaml"
  levels:
    - [200, "ok", "yes"]
    - [30, "low", "yes"]
    - [0, "low", "not analyzable"]

manta_config_t:
  container: "docker://hydragenetics/manta:1.6.0"

manta_run_workflow_t:
  container: "docker://hydragenetics/manta:1.6.0"

merge_af_complex_variants:
  merge_method: "sum"

merge_cnv_json:
  filtered_cnv_vcfs:
    - cnv_sv/svdb_query/{sample}_{type}.{tc_method}.svdb_query.annotate_cnv.cnv_amp_genes.filter.cnv_hard_filter_amp.fp_tag.vcf
    - cnv_sv/svdb_query/{sample}_{type}.{tc_method}.svdb_query.annotate_cnv.cnv_loh_genes_all.filter.cnv_hard_filter_loh.fp_tag.annotate_fp.vcf
  germline_vcf: snv_indels/bcbio_variation_recall_ensemble/{sample}_{type}.ensembled.vep_annotated.filter.germline.exclude.blacklist.vcf.gz
  unfiltered_cnv_vcfs:
    - cnv_sv/svdb_query/{sample}_{type}.{tc_method}.svdb_query.annotate_cnv.cnv_amp_genes.fp_tag.vcf.gz
    - cnv_sv/svdb_query/{sample}_{type}.{tc_method}.svdb_query.annotate_cnv.cnv_loh_genes_all.fp_tag.vcf.gz
  unfiltered_cnv_vcfs_tbi:
    - cnv_sv/svdb_query/{sample}_{type}.{tc_method}.svdb_query.annotate_cnv.cnv_amp_genes.fp_tag.vcf.gz.tbi
    - cnv_sv/svdb_query/{sample}_{type}.{tc_method}.svdb_query.annotate_cnv.cnv_loh_genes_all.fp_tag.vcf.gz.tbi

mosdepth:
  container: "docker://hydragenetics/mosdepth:0.3.2"
  extra: "--no-per-base --fast-mode"

mosdepth_bed:
  container: "docker://hydragenetics/mosdepth:0.3.2"

msisensor_pro:
  container: "docker://hydragenetics/msisensor_pro:1.1.a"
  extra: "-c 50"

multiqc:
  container: "docker://hydragenetics/multiqc:1.21"
  reports:
    DNA:
      config: "config/reports/multiqc_config_dna.yaml"
      included_unit_types: ["N", "T"]
      deduplication: ["mark_duplicates"]
      qc_files:
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastq1_fastqc.zip"
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastq2_fastqc.zip"
        - "qc/picard_collect_alignment_summary_metrics/{sample}_{type}.alignment_summary_metrics.txt"
        - "qc/picard_collect_duplication_metrics/{sample}_{type}.duplication_metrics.txt"
        - "qc/picard_collect_hs_metrics/{sample}_{type}.HsMetrics.txt"
        - "qc/picard_collect_insert_size_metrics/{sample}_{type}.insert_size_metrics.txt"
        - "qc/samtools_stats/{sample}_{type}.samtools-stats.txt"
        - "qc/gatk_calculate_contamination/{sample}_{type}.contamination.table"
    DNA_umi:
      config: "config/reports/multiqc_config_dna.yaml"
      included_unit_types: ["N", "T"]
      deduplication: ["umi"]
      qc_files:
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastq1_fastqc.zip"
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastq2_fastqc.zip"
        - "qc/picard_collect_alignment_summary_metrics/{sample}_{type}.alignment_summary_metrics.txt"
        - "qc/picard_collect_duplication_metrics/{sample}_{type}.duplication_metrics.txt"
        - "qc/picard_collect_hs_metrics/{sample}_{type}.HsMetrics.txt"
        - "qc/picard_collect_insert_size_metrics/{sample}_{type}.insert_size_metrics.txt"
        - "qc/samtools_stats/{sample}_{type}.samtools-stats.txt"
        - "qc/gatk_calculate_contamination/{sample}_{type}.contamination.table"
        - "alignment/fgbio_group_reads_by_umi/{sample}_{type}.umi.histo.tsv"
    RNA:
      config: "config/reports/multiqc_config_rna.yaml"
      included_unit_types: ["R"]
      qc_files:
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastq1_fastqc.zip"
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastq2_fastqc.zip"
        - "qc/mosdepth/{sample}_{type}.mosdepth.global.dist.txt"
        - "qc/mosdepth/{sample}_{type}.mosdepth.region.dist.txt"
        - "qc/picard_collect_alignment_summary_metrics/{sample}_{type}.alignment_summary_metrics.txt"
        - "qc/picard_collect_duplication_metrics/{sample}_{type}.duplication_metrics.txt"
        - "qc/picard_collect_hs_metrics/{sample}_{type}.HsMetrics.txt"
        - "qc/samtools_stats/{sample}_{type}.samtools-stats.txt"
        - "qc/mosdepth/{sample}_{type}.regions.bed.gz"

optitype:
  #container: "docker://hydragenetics/optitype:1.3.5"
  container: "docker://fred2/optitype:release-v1.3.1"
  sample_type: "-d"
  enumeration: 4

picard_collect_alignment_summary_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_hs_metrics:
  container: "docker://hydragenetics/picard:2.25.0"
  extra: "COVERAGE_CAP=50000"

picard_collect_duplication_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_insert_size_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_mark_duplicates:
  container: "docker://hydragenetics/picard:2.25.0"

purecn:
  container: "docker://hydragenetics/purecn:2.2.0"
  genome: "hg19"
  interval_padding: 100
  segmentation_method: "internal"
  fun_segmentation: "PSCBS"

purecn_coverage:
  container: "docker://hydragenetics/purecn:2.2.0"

purecn_purity_file:
  min_purity: 0.01

report_fusions:
  fusioncatcher_flag_low_support: 15
  fusioncatcher_low_support: 3
  fusioncatcher_low_support_inframe: 6
  star_fusion_flag_low_support: 15
  star_fusion_low_support: 2
  star_fusion_low_support_inframe: 6

report_gene_fuse:
  min_unique_reads: 6

sample_mixup_check:
  match_cutoff: 0.7

samtools_merge_bam:
  extra: "-c -p"

samtools_merge_bam_umi:
  extra: "-c -p"

scarhrd:
  container: "docker://hydragenetics/scarhrd:20200825"
  seqz: FALSE

star:
  container: "docker://hydragenetics/star:2.7.10a"

star_fusion:
  container: "docker://hydragenetics/star-fusion:1.10.1"
  extra: "--examine_coding_effect"

svdb_merge:
  container: "docker://hydragenetics/svdb:2.6.0"
  tc_method:
    - name: pathology_purecn
      cnv_caller:
        - cnvkit
        - gatk
        - jumble
      priority: "cnvkit,gatk,jumble"
    - name: purecn
      cnv_caller:
        - cnvkit
        - gatk
        - jumble
      priority: "cnvkit,gatk,jumble"
    - name: pathology
      cnv_caller:
        - cnvkit
        - gatk
        - jumble
      priority: "cnvkit,gatk,jumble"
  overlap: 1 #Just merge the two vcf-files without merging regions
  extra: "--pass_only" #Just merge the two vcf-files without merging regions

svdb_query:
  container: "docker://hydragenetics/svdb:2.6.0"

tmb:
  af_lower_limit: 0.05
  af_upper_limit: 0.95
  af_germline_lower_limit: 0.47
  af_germline_upper_limit: 0.53
  artifacts: ""
  background_panel: ""
  db1000g_limit: 0.0001
  dp_limit: 100
  gnomad_limit: 0.0001
  vd_limit: 10
  nr_avg_germline_snvs: 2.0
  nssnv_tmb_correction: 0.84
  variant_type_list: ["missense_variant", "stop_gained", "stop_lost"]

tmb_umi:
  af_lower_limit: 0.003
  af_upper_limit: 0.997
  af_germline_lower_limit: 0.40
  af_germline_upper_limit: 0.60
  background_panel: ""
  db1000g_limit: 0.0001
  dp_limit: 100
  gnomad_limit: 0.0001
  vd_limit: 10
  nr_avg_germline_snvs: 0.0
  nssnv_tmb_correction: 1.09
  filter_nr_observations: 3
  variant_type_list: ["missense_variant", "stop_gained", "stop_lost", "synonymous_variant", "stop_retained_variant"]

vardict:
  container: "docker://hydragenetics/vardict:1.8.3"
  allele_frequency_threshold: "0.01"
  allele_frequency_threshold_umi: "0.001"
  bed_columns: "-c 1 -S 2 -E 3 -g 4"
  extra: "-Q 1"

vep:
  container: "docker://hydragenetics/vep:113.0"
  mode: --offline --cache --refseq

vep_wo_pick:
  mode: --offline --cache --refseq

vt_decompose:
  container: "docker://hydragenetics/vt:2015.11.10"

vt_normalize:
  container: "docker://hydragenetics/vt:2015.11.10"
